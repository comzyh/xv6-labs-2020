> Which registers contain arguments to functions? For example, which register holds 13 in main's call to printf?

use pointer a0 to a7

For example:
`printf("%d %d\n", f(8)+1, 13);`
pass 3 arguments, void*, int, int. `13` is passed by a2

> Where is the call to function f in the assembly code for main? Where is the call to g? (Hint: the compiler may inline functions.)

Already inlined to 
`  26:	45b1                	li	a1,12`

> At what address is the function printf located?
0000000000000630


> What value is in the register ra just after the jalr to printf in main?

0x30.
 `30:	00000097          	auipc	ra,0x0` gets the pc value to ra

> Run the following code.
>
>	unsigned int i = 0x00646c72;
>	printf("H%x Wo%s", 57616, &i);
      
> What is the output? Here's an ASCII table that maps bytes to characters.

`He110 World`

> The output depends on that fact that the RISC-V is little-endian. If the RISC-V were instead big-endian what would you set i to in order to yield the same output?

0x726c6400

> Would you need to change 57616 to a different value?
No

> In the following code, what is going to be printed after 'y='? (note: the answer is not a specific value.) Why does this happen?
>	printf("x=%d y=%d", 3);

The value in register `a2`





